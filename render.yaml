services:
  # Backend API Service
  - type: web
    name: ai-job-assistant-backend
    runtime: python
    rootDir: backend
    build:
      environment:
        pythonVersion: 3.11
    buildCommand: |
      pip install --upgrade pip && pip install --only-binary=all -r requirements.txt && python -c "import nltk; nltk.download('stopwords', quiet=True); nltk.download('punkt', quiet=True)" && mkdir -p utils/output
    startCommand: |
      cd app && uvicorn main:app --host 0.0.0.0 --port $PORT
    envVars:
      - key: GROQ_API_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: PYTHONPATH
        value: /opt/render/project/src
      - key: PYTHONUNBUFFERED
        value: "1"
    healthCheckPath: /health
    plan: free
    region: oregon

  # Frontend Streamlit Service
  - type: web
    name: ai-job-assistant-frontend
    runtime: python
    buildCommand: |
      pip install --upgrade pip && pip install --only-binary=all -r requirements.txt
    startCommand: |
      streamlit run frontend/streamlit_app.py --server.port $PORT --server.address 0.0.0.0 --server.headless true --server.enableCORS false --server.enableXsrfProtection false
    envVars:
      - key: API_BASE_URL
        value: https://ai-job-assistant-backend.onrender.com
      - key: PYTHONPATH
        value: /opt/render/project/src
      - key: PYTHONUNBUFFERED
        value: "1"
    plan: free
    region: oregon
# Database (if needed in future)
# databases:
#   - name: ai-job-assistant-db
#     databaseName: ai_job_assistant
#     user: ai_job_assistant_user
#     plan: free
